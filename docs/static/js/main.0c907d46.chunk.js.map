{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized","useFetchGifs","loading","state","setState","useEffect","then","imgs","setTimeout","GifGrid","image","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAiB9C,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAe,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC7CN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,YCLlBG,EAAc,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAEpC,OACI,yBAAKC,UAAU,8CACX,yBAAKC,IAAKF,EAAKG,IAAKJ,M,uBCWjBK,EAlBK,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbN,EAFa,iDAEoCO,UAAUF,GAF9C,+DAGAG,MAAOR,GAHP,cAGbS,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,UAAUhB,QAVhB,kBAcZY,GAdY,4CAAH,sDC8BLK,EA3Ba,SAAEZ,GAAe,IAAD,EAEdrB,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAuBxC,OAhBAC,qBAAW,WACPjB,EAAQC,GACHiB,MAAM,SAAAC,GAEHC,YAAW,WAEPJ,EAAS,CACLT,KAAMY,EACNL,SAAS,MAGd,QAGZ,CAACb,IAEGc,GCtBEM,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,EAENY,EAAaZ,GAAhCU,EAFyB,EAE9BJ,KAAaO,EAFiB,EAEjBA,QAEpB,OACI,oCACI,4BAAKb,GACJa,GAAW,uBAAGjB,UAAU,iDAAb,eACZ,yBAAKA,UAAU,aAEPc,EAAOF,KAAK,SAAAa,GAAK,OACb,kBAAC,EAAD,eACIC,IAAOD,EAAM5B,IACR4B,UCclBE,EA1BM,WAAO,IAAD,EAEa5C,mBAAS,CAAC,SAFvB,mBAEhBQ,EAFgB,KAEJT,EAFI,KAIvB,OAEI,oCACI,6CACA,kBAAC,EAAD,CAAaA,cAAkBA,IAC/B,6BAEA,4BAEQS,EAAWqB,KAAK,SAAAR,GAAQ,OACpB,kBAAC,EAAD,CACIsB,IAAOtB,EACPA,SAAYA,U,MChBxCwB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.0c907d46.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 0){\r\n            // setCategories se llama con un callback que recibe el estado anterior\r\n            setCategories( categories => [inputValue, ...categories]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input\r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}","import React from 'react'\r\n\r\n// export const GifGridItem = (props) => {\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInDown\">\r\n            <img src={url} alt={title}/>\r\n        </div>\r\n    )\r\n\r\n}\r\n","export const getGifs = async( category ) => {\r\n        \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=RScRr4j60OMDZMbSvtnmK6Q4xhf7R1ps`;\r\n    const resp = await fetch (url);\r\n    const {data} = await resp.json();\r\n    \r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n\r\n}\r\n\r\nexport default getGifs;","import { useState, useEffect } from 'react'\r\nimport getGifs from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs(category)\r\n            .then( imgs => {\r\n\r\n                setTimeout(() => {\r\n                    \r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n\r\n                }, 0);\r\n\r\n            });\r\n    }, [category]);\r\n\r\n    return state;\r\n    \r\n}\r\n\r\nexport default useFetchGifs;\r\n","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport useFetchGifs from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flip animate__slow\">Cargando...</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( image => ( \r\n                        <GifGridItem \r\n                            key = {image.id}\r\n                            { ...image }\r\n                        />\r\n                    ))\r\n\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\n// snippet para crear componentes: rafc\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Dota']);\r\n\r\n    return(\r\n        // FRAGMENT\r\n        <>\r\n            <h2>GifExpert App</h2>\r\n            <AddCategory setCategories = { setCategories } />\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                            key = {category}\r\n                            category = {category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// https://es.reactjs.org/docs/faq-structure.html\n// https://hackernoon.com/structuring-projects-and-naming-components-in-react-1261b6e18d76"],"sourceRoot":""}